#!/bin/bash
 
# This script will be executed on your CI system if available. Otherwise it will
# execute while your application is stopped before the deploy step.
 
export NODE_VERSION="0.8.9"
 
# This script builds and installs node.js into the $OPENSHIFT_DATA_DIR directory
# from source code. The node.js source tarball will be downloaded, compiled, and
# installed automatically only if a node binary does not exist in '../data/bin'
# or if an existing binary does not match the specified version above.
 
# NOTE: This can take while to compile on an openshift gear (@25min), so be
# patient. This wait can be mitigated by compiling binaries elsewhere, and
# copying them to the $OPENSHIFT_DATA_DIR directory. This script will only
# attempt to compile sources after testing the binary version.
 
export NODE_NAME="node-v$NODE_VERSION"
echo "build: Checking for $NODE_NAME binary \$OPENSHIFT_DATA_DIR/bin/node ..."
if [ -x $OPENSHIFT_DATA_DIR/bin/node ] && \
   [ "`$OPENSHIFT_DATA_DIR/bin/node -v`" = "v$NODE_VERSION" ]; then
  echo "build: $NODE_NAME is installed."
  exit 0
fi
 
echo "build: $NODE_NAME binary was not found, or is incorrect version."
export NODE_TARBALL="$NODE_NAME.tar.gz"
export NODE_TARBALL_PATH="$OPENSHIFT_TMP_DIR"$NODE_TARBALL
export NODE_TARBALL_SHA1=`curl -s \
    http://nodejs.org/dist/v$NODE_VERSION/SHASUMS.txt | \
    grep "$NODE_TARBALL" | awk '{ print $1 }'`
 
echo "build: Checking for source code \$OPENSHIFT_TMP_DIR/$NODE_TARBALL ..."
if [ ! -f $NODE_TARBALL_PATH ] || \
   [ "`sha1sum $NODE_TARBALL_PATH | grep \"$NODE_TARBALL_SHA1\" | \
       awk '{ print $1 }'`" != "$NODE_TARBALL_SHA1" ]; then
  echo "build: Downloading source code ..."
  curl -so $NODE_TARBALL_PATH \
      http://nodejs.org/dist/v$NODE_VERSION/$NODE_TARBALL
  echo "build: Downloaded source code."
else
  echo "build: Found source code $NODE_TARBALL_PATH"
fi
 
echo "build: Verifying $NODE_NAME source code ..."
if [ `sha1sum $NODE_TARBALL_PATH | grep "$NODE_TARBALL_SHA1" | \
    awk '{ print $1 }'` != "$NODE_TARBALL_SHA1" ]; then
  echo "build: ERROR: SHA1 Checksum verification failed! Exiting build process."
  exit 1
else
  echo "build: $NODE_NAME source code checksum verified."
fi
 
echo "build: Extracting $NODE_NAME source files ..."
tar zxCf $OPENSHIFT_TMP_DIR $NODE_TARBALL_PATH
cd "$OPENSHIFT_TMP_DIR"$NODE_NAME
echo "build: Extracted $NODE_NAME source files."
 
if [ ! -f ./config.mk ]; then
  echo "build: Configuring $NODE_NAME ... "
  ./configure \
      --prefix=$OPENSHIFT_DATA_DIR \
      --without-waf \
      --shared-openssl \
      --shared-openssl-includes=/usr/local/include/ \
      --shared-openssl-libpath=/usr/local/lib/ \
      --shared-zlib \
      --shared-zlib-includes=/usr/local/include/ \
      --shared-zlib-libpath=/usr/local/lib/
  echo "build: Configured $NODE_NAME"
fi
 
echo "build: Building $NODE_NAME (Be patient) ... "
make -j
echo "build: Built $NODE_NAME"
 
echo "build: Installing $NODE_NAME ... "
make install
echo "build: $NODE_NAME is installed."
